{"version":3,"sources":["actions/posts.js","components/PostForm/PostForm.js","components/PostCard/PostCard.js","components/PostsList.js","components/AppContainer.js","reducers/posts.js","reducers/index.js","index.js"],"names":["addPost","text","id","likedByMe","type","payload","likePost","fetchPosts","dispatch","getState","a","axios","get","result","postsList","data","posts","createPost","post","response","toggleLikePost","put","CardHeader","styled","div","ContentWrapper","CardContent","SyledAvatar","Avatar","ActionsWrapper","CardActions","PostForm","Component","constructor","props","super","onChangePost","event","this","setState","postValue","target","value","onClickEnviar","state","render","label","fullWidth","multiline","onChange","onClick","variant","color","connect","PostCard","onClickLikeButton","avatar","title","subheader","component","PostsList","React","componentDidMount","map","onLikePost","Container","AppContainer","initialState","rootReducer","combineReducers","action","console","log","generateClassName","createGenerateClassName","jss","create","jssPreset","insertionPoint","document","getElementById","theme","createMuiTheme","palette","store","createStore","applyMiddleware","thunk","App","rootElement","ReactDOM"],"mappings":"6WAEO,MAAMA,EAAU,CAACC,EAAMC,EAAIC,KAAX,CACrBC,KAAM,WACNC,QAAS,CACPJ,KAAMA,EACNC,GAAIA,EACJC,UAAWA,KAaFG,EAAWJ,IACf,CACLE,KAAM,YACNC,QAAS,CACPH,GAAIA,KAKGK,EAAa,2CAAM,WAAOC,EAAUC,GAAjB,eAAAC,EAAA,sEACTC,IAAMC,IACzB,yEAF4B,OACxBC,EADwB,OAK9BL,EAtBO,CACLJ,KAAM,YACNC,QAAS,CACPS,UAmBcD,EAAOE,KAAKC,SALA,2CAAN,wDAQbC,EAAahB,GAAI,uCAAI,WAAOO,EAAUC,GAAjB,eAAAC,EAAA,sEACTC,IAAMO,KAC3B,wEACA,CACEjB,SAJ4B,OAC1BkB,EAD0B,OAQhCX,EACER,EACEmB,EAASJ,KAAKG,KAAKjB,KACnBkB,EAASJ,KAAKG,KAAKhB,GACnBiB,EAASJ,KAAKG,KAAKf,YAZS,2CAAJ,wDAiBjBiB,EAAiBlB,GAAE,uCAAI,WAAOM,EAAUC,GAAjB,SAAAC,EAAA,sEACXC,IAAMU,IAAN,gFACoDnB,EADpD,UADW,cAKlCM,EAASF,EAASJ,IALgB,2CAAJ,wD,8eCvChC,MAAMoB,EAAaC,IAAOC,IAAV,KAOVC,EAAiBF,YAAOG,IAAPH,CAAH,KAKdI,EAAcJ,YAAOK,IAAPL,CAAH,KAIXM,EAAiBN,YAAOO,IAAPP,CAAH,KAKpB,MAAMQ,UAAiBC,YACrBC,YAAYC,GACVC,MAAMD,GADW,KAQnBE,aAAeC,IACbC,KAAKC,SAAS,CAAEC,UAAWH,EAAMI,OAAOC,SATvB,KAYnBC,cAAgB,KACdL,KAAKJ,MAAMlC,QAAQsC,KAAKM,MAAMJ,YAV9BF,KAAKM,MAAQ,CACXJ,UAAW,IAYfK,SACE,OACE,kBAAC,IAAD,KACE,kBAACvB,EAAD,KACE,kBAAC,IAAD,gCAEF,kBAAC,IAAD,MACA,kBAACG,EAAD,KACE,kBAACE,EAAD,MACA,kBAAC,IAAD,CACEmB,MAAO,mCACPC,WAAS,EACTC,WAAS,EACTC,SAAUX,KAAKF,aACfM,MAAOJ,KAAKM,MAAMJ,aAGtB,kBAAC,IAAD,MACA,kBAACX,EAAD,KACE,kBAAC,IAAD,CACEqB,QAASZ,KAAKK,cACdQ,QAAS,YACTC,MAAO,WAHT,aAmBKC,kBACb,KAPyB7C,IAClB,CACLR,QAASC,GAAQO,EAASS,EAAWhB,MAI1BoD,CAGbtB,G,oLC/EF,MAAMF,EAAiBN,YAAOO,IAAPP,CAAH,KAKpB,MAAM+B,UAAiBtB,YACrBC,YAAYC,GACVC,MAAMD,GADW,KAMnBqB,kBAAoB,KAClBjB,KAAKJ,MAAM5B,SAASgC,KAAKJ,MAAMhB,KAAKhB,KAJpCoC,KAAKM,MAAQ,GAOfC,SACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYW,OAAQ,kBAAC,IAAD,MAAYC,MAAM,aAAUC,UAAU,iBAC1D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYC,UAAU,KAAKrB,KAAKJ,MAAMhB,KAAKjB,OAE7C,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAYkD,QAAS,YAAaD,QAASZ,KAAKiB,mBAC9C,kBAAC,IAAD,CACEH,MAAOd,KAAKJ,MAAMhB,KAAKf,UAAY,YAAc,aAGrD,kBAAC,IAAD,CAAYgD,QAAS,aACnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAYA,QAAS,aACnB,kBAAC,IAAD,UAQGG,QCnDf,MAAMM,UAAkBC,IAAM7B,UAC5B8B,oBACExB,KAAKJ,MAAM3B,aAGbsC,SACE,OAAOP,KAAKJ,MAAMpB,UAAUiD,IAAI7C,GAC9B,kBAAC,EAAD,CAAUA,KAAMA,EAAMZ,SAAUgC,KAAKJ,MAAM8B,eAgBlCX,kBAXST,IAAK,CAC3B9B,UAAW8B,EAAM5B,QAGQR,IAClB,CACLD,WAAY,IAAMC,EAASD,KAC3ByD,WAAY9D,GAAMM,EAASY,EAAelB,MAI/BmD,CAGbO,G,sKC1BF,MAAMK,EAAY1C,IAAOC,IAAV,KAoBf,MAAM0C,UAAqBlC,YACzBa,SACE,OACE,kBAACoB,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QAMOC,SCpCf,MAAMC,GAAe,CACnB,CACEjE,GAAI,EACJD,KAAM,aACNE,WAAW,GAEb,CACED,GAAI,EACJD,KAAM,6BACNE,WAAW,ICNFiE,GAAcC,YAAgB,CACzCrD,MDS0B,CAAC4B,EAAQuB,GAAcG,KAEjD,OADAC,QAAQC,IAAIF,GACJA,EAAOlE,MACb,IAAK,WAMH,MAAO,CALS,CACdH,KAAMqE,EAAOjE,QAAQJ,KACrBC,GAAIoE,EAAOjE,QAAQH,GACnBC,UAAWmE,EAAOjE,QAAQF,cAERyC,GACtB,IAAK,YACH,OAAO0B,EAAOjE,QAAQS,UACxB,IAAK,YAWH,OAViB8B,EAAMmB,IAAI7C,GACrBA,EAAKhB,KAAOoE,EAAOjE,QAAQH,GACtB,2BACFgB,GADL,IAEEf,WAAYe,EAAKf,YAGZe,GAIb,QACE,OAAO0B,M,cErBb,MAAM6B,GAAoBC,oCACpBC,GAAMC,iBAAO,2BACdC,uBADa,IAGhBC,eAAgBC,SAASC,eAAe,0BAGpCC,GAAQC,yBAAe,CAC3BC,QAAS,CACP/E,KAAM,UAIJgF,GAAQC,YAAYjB,GAAakB,YAAgBC,OAEvD,SAASC,KACP,OACE,kBAAC,IAAD,CAAab,IAAKA,GAAKF,kBAAmBA,IACxC,kBAAC,mBAAD,CAAkBQ,MAAOA,IACvB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAUG,MAAOA,IACf,kBAAC,GAAD,SAOV,MAAMK,GAAcV,SAASC,eAAe,QAC5CU,IAAS7C,OAAO,kBAAC2C,GAAD,MAASC,M","file":"static/js/main.245e613f.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const addPost = (text, id, likedByMe) => ({\n  type: \"ADD_POST\",\n  payload: {\n    text: text,\n    id: id,\n    likedByMe: likedByMe\n  }\n});\n\nexport const setPosts = postsList => {\n  return {\n    type: \"SET_POSTS\",\n    payload: {\n      postsList: postsList\n    }\n  };\n};\n\nexport const likePost = id => {\n  return {\n    type: \"LIKE_POST\",\n    payload: {\n      id: id\n    }\n  };\n};\n\nexport const fetchPosts = () => async (dispatch, getState) => {\n  const result = await axios.get(\n    \"https://us-central1-missao-newton.cloudfunctions.net/reduxPosts/posts\"\n  );\n\n  dispatch(setPosts(result.data.posts));\n};\n\nexport const createPost = text => async (dispatch, getState) => {\n  const response = await axios.post(\n    \"https://us-central1-missao-newton.cloudfunctions.net/reduxPosts/posts\",\n    {\n      text\n    }\n  );\n\n  dispatch(\n    addPost(\n      response.data.post.text,\n      response.data.post.id,\n      response.data.post.likedByMe\n    )\n  );\n};\n\nexport const toggleLikePost = id => async (dispatch, getState) => {\n  const response = await axios.put(\n    `https://us-central1-missao-newton.cloudfunctions.net/reduxPosts/posts/${id}/like`\n  );\n\n  dispatch(likePost(id));\n};\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Divider,\n  Card,\n  CardContent,\n  Typography,\n  Avatar,\n  TextField,\n  CardActions,\n  Button\n} from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { addPost, createPost } from \"../../actions/posts\";\n\nconst CardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 30px;\n`;\n\nconst ContentWrapper = styled(CardContent)`\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst SyledAvatar = styled(Avatar)`\n  margin-right: 10px;\n`;\n\nconst ActionsWrapper = styled(CardActions)`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nclass PostForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      postValue: \"\"\n    };\n  }\n\n  onChangePost = event => {\n    this.setState({ postValue: event.target.value });\n  };\n\n  onClickEnviar = () => {\n    this.props.addPost(this.state.postValue);\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader>\n          <Typography>Criar publicação</Typography>\n        </CardHeader>\n        <Divider />\n        <ContentWrapper>\n          <SyledAvatar />\n          <TextField\n            label={\"No que você está pensando?\"}\n            fullWidth\n            multiline\n            onChange={this.onChangePost}\n            value={this.state.postValue}\n          />\n        </ContentWrapper>\n        <Divider />\n        <ActionsWrapper>\n          <Button\n            onClick={this.onClickEnviar}\n            variant={\"contained\"}\n            color={\"primary\"}\n          >\n            Enviar\n          </Button>\n        </ActionsWrapper>\n      </Card>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPost: text => dispatch(createPost(text))\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(PostForm);\n","import React, { Component } from \"react\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Avatar,\n  CardActions,\n  CardHeader,\n  IconButton\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport ThumbUp from \"@material-ui/icons/ThumbUp\";\nimport Share from \"@material-ui/icons/Share\";\nimport Comment from \"@material-ui/icons/Comment\";\n\nconst ActionsWrapper = styled(CardActions)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nclass PostCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  onClickLikeButton = () => {\n    this.props.likePost(this.props.post.id);\n  };\n\n  render() {\n    return (\n      <Card>\n        <CardHeader avatar={<Avatar />} title=\"Usuário\" subheader=\"Há 15 min\" />\n        <CardContent>\n          <Typography component=\"p\">{this.props.post.text}</Typography>\n        </CardContent>\n        <ActionsWrapper>\n          <IconButton variant={\"contained\"} onClick={this.onClickLikeButton}>\n            <ThumbUp\n              color={this.props.post.likedByMe ? \"secondary\" : \"inherit\"}\n            />\n          </IconButton>\n          <IconButton variant={\"contained\"}>\n            <Share />\n          </IconButton>\n          <IconButton variant={\"contained\"}>\n            <Comment />\n          </IconButton>\n        </ActionsWrapper>\n      </Card>\n    );\n  }\n}\n\nexport default PostCard;\n","import React from \"react\";\nimport PostCard from \"./PostCard/PostCard\";\nimport { connect } from \"react-redux\";\nimport { fetchPosts, likePost, toggleLikePost } from \"../actions/posts\";\n\nclass PostsList extends React.Component {\n  componentDidMount() {\n    this.props.fetchPosts();\n  }\n\n  render() {\n    return this.props.postsList.map(post => (\n      <PostCard post={post} likePost={this.props.onLikePost} />\n    ));\n  }\n}\n\nconst mapStateToProps = state => ({\n  postsList: state.posts\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchPosts: () => dispatch(fetchPosts()),\n    onLikePost: id => dispatch(toggleLikePost(id))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostsList);\n","import React, { Component } from \"react\";\nimport PostForm from \"./PostForm/PostForm\";\nimport PostsList from \"./PostsList\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 400px;\n  justify-content: center;\n  gap: 15px;\n`;\n\nconst posts = [\n  {\n    id: 1,\n    text: \"Post legal\",\n    likedByMe: false\n  },\n  {\n    id: 2,\n    text: \"Outro post, esse com like!\",\n    likedByMe: true\n  }\n];\n\nclass AppContainer extends Component {\n  render() {\n    return (\n      <Container>\n        <PostForm />\n        <PostsList />\n      </Container>\n    );\n  }\n}\n\nexport default AppContainer;\n","const initialState = [\n  {\n    id: 1,\n    text: \"Post legal\",\n    likedByMe: false\n  },\n  {\n    id: 2,\n    text: \"Outro post, esse com like!\",\n    likedByMe: true\n  }\n];\n\nexport const postsReducer = (state = initialState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"ADD_POST\":\n      const newPost = {\n        text: action.payload.text,\n        id: action.payload.id,\n        likedByMe: action.payload.likedByMe\n      };\n      return [newPost, ...state];\n    case \"SET_POSTS\":\n      return action.payload.postsList;\n    case \"LIKE_POST\":\n      const newState = state.map(post => {\n        if (post.id === action.payload.id) {\n          return {\n            ...post,\n            likedByMe: !post.likedByMe\n          };\n        } else {\n          return post;\n        }\n      });\n      return newState;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { postsReducer } from \"./posts\";\n\nexport const rootReducer = combineReducers({\n  posts: postsReducer\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport JssProvider from \"react-jss/lib/JssProvider\";\nimport { create } from \"jss\";\nimport {\n  MuiThemeProvider,\n  createGenerateClassName,\n  jssPreset\n} from \"@material-ui/core/styles\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppContainer from \"./components/AppContainer\";\nimport { rootReducer } from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst generateClassName = createGenerateClassName();\nconst jss = create({\n  ...jssPreset(),\n  // We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n  insertionPoint: document.getElementById(\"jss-insertion-point\")\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\"\n  }\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nfunction App() {\n  return (\n    <JssProvider jss={jss} generateClassName={generateClassName}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Provider store={store}>\n          <AppContainer />\n        </Provider>\n      </MuiThemeProvider>\n    </JssProvider>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}